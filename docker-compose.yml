services:
  neo4j-origin1:
    image: neo4j:5-enterprise
    hostname: neo4j-origin1
    container_name: neo4j-origin1
    ports:
      - "7475:7474"
      - "7688:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"

  neo4j-origin2:
    image: neo4j:5-enterprise
    hostname: neo4j-origin2
    container_name: neo4j-origin2
    ports:
      - "7476:7474"
      - "7689:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"

  neo4j-dest-tech:
    image: neo4j:5-enterprise
    hostname: neo4j-dest-tech
    container_name: neo4j-dest-tech
    ports:
      - "7477:7474"
      - "7690:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"

  neo4j-dest-obs:
    image: neo4j:5-enterprise
    hostname: neo4j-dest-obs
    container_name: neo4j-dest-obs
    ports:
      - "7478:7474"
      - "7691:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"

  zookeeper1:
    image: confluentinc/cp-zookeeper:7.5.2
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker1:
    image: confluentinc/cp-server:7.5.2
    hostname: broker1
    container_name: broker1
    depends_on:
      - zookeeper1
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1

  schema-reg:
    image: confluentinc/cp-schema-registry:7.5.2
    hostname: schema-reg
    container_name: schema-reg
    depends_on:
      - broker1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-reg
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  conn:
    image: confluentinc/cp-server-connect:7.5.2
    hostname: conn
    container_name: conn
    depends_on:
      - broker1
      - schema-reg
    ports:
      - "8083:8083"
    volumes:
      - ./plugins:/tmp/connect-plugins
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker1:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: conn
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-reg:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/tmp/connect-plugins"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

  control-c:
    image: confluentinc/cp-enterprise-control-center:7.5.2
    hostname: control-c
    container_name: control-c
    depends_on:
      - broker1
      - schema-reg
      - conn
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'conn:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-reg:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
